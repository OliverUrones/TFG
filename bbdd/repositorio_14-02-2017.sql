-- MySQL Script generated by MySQL Workbench
-- mar 14 feb 2017 12:53:46 UTC
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema repositorio
-- -----------------------------------------------------
-- Base de datos para el repositorio de archivos.
-- Trabajo de Fin de Grado de Oliver Urones García
-- Grado en Ingeniería Informática de Sistemas de Información

-- -----------------------------------------------------
-- Schema repositorio
--
-- Base de datos para el repositorio de archivos.
-- Trabajo de Fin de Grado de Oliver Urones García
-- Grado en Ingeniería Informática de Sistemas de Información
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `repositorio` DEFAULT CHARACTER SET utf8 ;
USE `repositorio` ;

-- -----------------------------------------------------
-- Table `repositorio`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `repositorio`.`roles` (
  `rol_id` INT NOT NULL AUTO_INCREMENT,
  `tipo` VARCHAR(255) NULL,
  PRIMARY KEY (`rol_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci
COMMENT = 'Tabla para almacenar los roles de los usuarios.';


-- -----------------------------------------------------
-- Table `repositorio`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `repositorio`.`usuarios` (
  `usuario_id` INT NOT NULL AUTO_INCREMENT,
  `rol_id` INT NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `nombre` VARCHAR(255) NOT NULL,
  `apellidos` VARCHAR(255) NULL,
  `token` VARCHAR(255) NULL,
  `validez_token` TIMESTAMP NULL,
  `fecha_creacion` TIMESTAMP NULL,
  `estado` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'Campo para saber si una cuenta ha sido activada. 0 - No. 1 - Sí',
  PRIMARY KEY (`usuario_id`),
  INDEX `fk_users_rols_idx` (`rol_id` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  CONSTRAINT `fk_users_rols`
    FOREIGN KEY (`rol_id`)
    REFERENCES `repositorio`.`roles` (`rol_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci
COMMENT = 'Tabla para almacenar los datos de los usuarios.';


-- -----------------------------------------------------
-- Table `repositorio`.`categorias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `repositorio`.`categorias` (
  `categoria_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(255) NOT NULL,
  `categoria_padre` INT NOT NULL,
  PRIMARY KEY (`categoria_id`),
  INDEX `fk_categorias_categorias_idx` (`categoria_padre` ASC),
  CONSTRAINT `fk_categorias_categorias`
    FOREIGN KEY (`categoria_padre`)
    REFERENCES `repositorio`.`categorias` (`categoria_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci
COMMENT = 'Tabla para almacenar las categorías de los archivos. Hay categorías \"padre\" y categorias \"hija\".';


-- -----------------------------------------------------
-- Table `repositorio`.`archivos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `repositorio`.`archivos` (
  `archivo_id` INT NOT NULL AUTO_INCREMENT,
  `usuario_id` INT NOT NULL,
  `categoria_id` INT NOT NULL,
  `nombre` VARCHAR(255) NOT NULL,
  `enlace_descarga` VARCHAR(2555) NOT NULL,
  PRIMARY KEY (`archivo_id`),
  INDEX `fk_files_users_idx` (`usuario_id` ASC),
  INDEX `fk_files_categories_idx` (`categoria_id` ASC),
  CONSTRAINT `fk_files_users`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `repositorio`.`usuarios` (`usuario_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_files_categories`
    FOREIGN KEY (`categoria_id`)
    REFERENCES `repositorio`.`categorias` (`categoria_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci
COMMENT = 'Tabla para almacenar los datos de los archivos.';


-- -----------------------------------------------------
-- Table `repositorio`.`valoracion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `repositorio`.`valoracion` (
  `valoracion_id` INT NOT NULL AUTO_INCREMENT,
  `usuario_id` INT NOT NULL,
  `archivo_id` INT NOT NULL,
  `puntuacion` INT NULL,
  INDEX `fk_calificaciones_archivos_idx` (`archivo_id` ASC),
  PRIMARY KEY (`valoracion_id`),
  CONSTRAINT `fk_calificaciones_usuarios`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `repositorio`.`usuarios` (`usuario_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_calificaciones_archivos`
    FOREIGN KEY (`archivo_id`)
    REFERENCES `repositorio`.`archivos` (`archivo_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish2_ci
COMMENT = 'Tabla para almacenar las calificaciones que ponen los usuarios a los archivos.';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
